name: (SMART) Unit Tests, Deploy, Integration Test
on:
  push:
    branches:
      - smart-develop
      - feat-smart-multitenancy
jobs:
  deploy:
#    needs: pre-deployment-check
    name: Deploy to Dev
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - enableMultiTenancy: false
            region: us-east-2
            issuerEndpointSecretName: SMART_ISSUER_ENDPOINT
            oAuth2ApiEndpointSecretName: SMART_OAUTH2_API_ENDPOINT
            patientPickerEndpointSecretName: SMART_PATIENT_PICKER_ENDPOINT
          - enableMultiTenancy: true
            region: us-west-1
            issuerEndpointSecretName: MULTITENANCY_SMART_ISSUER_ENDPOINT
            oAuth2ApiEndpointSecretName: MULTITENANCY_SMART_OAUTH2_API_ENDPOINT
            patientPickerEndpointSecretName: MULTITENANCY_SMART_PATIENT_PICKER_ENDPOINT
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install serverless
        run: npm install -g serverless
      - name: Install npm dependencies
        run: yarn install
      - name: Download US Core IG
        # NOTE if updateing the IG version. Please see update implementationGuides.test.ts test too.
        run: |
          mkdir -p implementationGuides
          curl http://hl7.org/fhir/us/core/STU3.1.1/package.tgz | tar xz -C implementationGuides
      - name: Compile IGs
        run: yarn run compile-igs
      - name: Deploy Hapi validator
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SMART_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SMART_AWS_SECRET_ACCESS_KEY }}
        run: |
          cd javaHapiValidatorLambda
          mvn --batch-mode --update-snapshots --no-transfer-progress clean install
          serverless deploy --stage dev --region ${{ matrix.region }} --conceal
          cd ..
      - name: Deploy FHIR Server and ddbToEs
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SMART_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SMART_AWS_SECRET_ACCESS_KEY }}
        run: |
          yarn install
          serverless deploy --stage dev --region ${{ matrix.region }} --issuerEndpoint ${{ secrets[matrix.issuerEndpointSecretName] }} --oAuth2ApiEndpoint ${{ secrets[matrix.oAuth2ApiEndpointSecretName] }} --patientPickerEndpoint ${{ secrets[matrix.patientPickerEndpointSecretName] }} --useHapiValidator true --enableMultiTenancy ${{ matrix.enableMultiTenancy }} --conceal
      - name: Deploy auditLogMover
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SMART_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SMART_AWS_SECRET_ACCESS_KEY }}
        run: |
          cd auditLogMover
          yarn install
          serverless deploy --stage dev --region ${{ matrix.region }} --conceal
  inferno-test:
    needs: deploy
    name: Run Inferno Tests
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          repository: nguyen102/inferno
          ref: fhir-works
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Install dependency
        run: |
          gem install bundler
          bundle install
      - name: Execute tests
        env:
          SERVICE_URL: ${{ secrets.SMART_SERVICE_URL}}
          CLIENT_ID: ${{ secrets.SMART_AUTH_CLIENT_ID}}
          CLIENT_SECRET: ${{ secrets.SMART_AUTH_CLIENT_SECRET }}
          AUTH_ENDPOINT: ${{ secrets.SMART_AUTH_ENDPOINT }}
          TOKEN_ENDPOINT: ${{ secrets.SMART_TOKEN_ENDPOINT}}
          AUTH_USERNAME: ${{ secrets.SMART_AUTH_USERNAME}}
          AUTH_PASSWORD: ${{ secrets.SMART_AUTH_PASSWORD}}
        run: |
          cp fhir-works-example.json fhir-works.json
          sed -i -e "s#SERVER_ENDPOINT#$SERVICE_URL#g" fhir-works.json
          sed -i -e "s#CLIENT_ID#$CLIENT_ID#g" fhir-works.json
          sed -i -e "s#CLIENT_SECRET#$CLIENT_SECRET#g" fhir-works.json
          sed -i -e "s#AUTH_ENDPOINT#$AUTH_ENDPOINT#g" fhir-works.json
          sed -i -e "s#TOKEN_ENDPOINT#$TOKEN_ENDPOINT#g" fhir-works.json
          sed -i -e "s#AUTH_USERNAME#$AUTH_USERNAME#g" fhir-works.json
          sed -i -e "s#AUTH_PASSWORD#$AUTH_PASSWORD#g" fhir-works.json
          bundle exec rake db:create db:schema:load
          bundle exec rake inferno:execute_batch[fhir-works.json]
  custom-integration-tests:
    needs: inferno-test
    name: Run custom integration tests
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: |
          yarn install
      - name: Execute tests
        env:
          SMART_OAUTH2_API_ENDPOINT: ${{ secrets.SMART_OAUTH2_API_ENDPOINT}}
          SMART_INTEGRATION_TEST_CLIENT_ID: ${{ secrets.SMART_INTEGRATION_TEST_CLIENT_ID}}
          SMART_INTEGRATION_TEST_CLIENT_PW: ${{ secrets.SMART_INTEGRATION_TEST_CLIENT_PW}}
          SMART_AUTH_USERNAME: ${{ secrets.SMART_AUTH_USERNAME}}
          SMART_AUTH_ADMIN_USERNAME: ${{ secrets.SMART_AUTH_ADMIN_USERNAME}}
          SMART_AUTH_PASSWORD: ${{ secrets.SMART_AUTH_PASSWORD}}
          SMART_SERVICE_URL: ${{ secrets.SMART_SERVICE_URL}}
          SMART_API_KEY: ${{ secrets.SMART_API_KEY}}
        run: yarn int-test
